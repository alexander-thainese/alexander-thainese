//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework DbContext template.
// Code is generated on: 2020-10-26 08:45:09
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Data;
using System.Data.Common;
using System.Data.Entity;
using System.Data.Entity.Infrastructure;
using System.Data.Entity.ModelConfiguration;
using System.Data.Entity.ModelConfiguration.Conventions;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using CMT.DL.Core;

using System.Data.Entity.Core;
using System.Data.Entity.Core.EntityClient;
using System.Data.Entity.Core.Objects;
using System.Data.Entity.Core.Objects.DataClasses;

namespace CMT.DL
{

    #region CmtEntities
    public partial class CmtEntities : DbContext
    {
        #region Constructors

        /// <summary>
        /// Initialize a new CmtEntities object.
        /// </summary>
        public CmtEntities() :
                base(@"name=CMTEntitiesConnectionString")
        {
            Configure();
        }

        /// <summary>
        /// Initializes a new CmtEntities object using the connection string found in the 'CmtEntities' section of the application configuration file.
        /// </summary>
        public CmtEntities(string nameOrConnectionString) :
                base(nameOrConnectionString)
        {
            Configure();
        }

        private void Configure()
        {
            this.Configuration.AutoDetectChangesEnabled = true;
            this.Configuration.LazyLoadingEnabled = true;
            this.Configuration.ProxyCreationEnabled = true;
            this.Configuration.ValidateOnSaveEnabled = true;
        }

        #endregion

        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {

            throw new UnintentionalCodeFirstException();
        }

        public virtual DbSet<Campaign> Campaigns { get; set; }
        public virtual DbSet<CampaignValue> CampaignValues { get; set; }
        public virtual DbSet<Country> Countries { get; set; }
        public virtual DbSet<DistinctRow> DistinctRows { get; set; }
        public virtual DbSet<ElementType> ElementTypes { get; set; }
        public virtual DbSet<Import> Imports { get; set; }
        public virtual DbSet<MetadataElement> MetadataElements { get; set; }
        public virtual DbSet<MetadataSchema> MetadataSchemata { get; set; }
        public virtual DbSet<MetadataSchemaElement> MetadataSchemaElements { get; set; }
        public virtual DbSet<MetadataGroup> MetadataGroups { get; set; }
        public virtual DbSet<SourceTable> SourceTables { get; set; }
        public virtual DbSet<SourceValue> SourceValues { get; set; }
        public virtual DbSet<Value> Values { get; set; }
        public virtual DbSet<ValueDetail> ValueDetails { get; set; }
        public virtual DbSet<ValueList> ValueLists { get; set; }
        public virtual DbSet<CampaignImport> CampaignImports { get; set; }
        public virtual DbSet<ViewElement> ViewElements { get; set; }
        public virtual DbSet<Channel> Channels { get; set; }
        public virtual DbSet<ViewCampaign> ViewCampaigns { get; set; }
        public virtual DbSet<ViewMetadataElementTree> ViewMetadataElementTrees { get; set; }
        public virtual DbSet<ValueListLevel> ValueListLevels { get; set; }
        public virtual DbSet<Application> Applications { get; set; }
        public virtual DbSet<DistinctRowGrouping> DistinctRowGroupings { get; set; }
        public virtual DbSet<ViewValueTree> ViewValueTrees { get; set; }
        public virtual DbSet<BrandImportHistory> BrandImportHistories { get; set; }
        public virtual DbSet<DataRange> DataRanges { get; set; }
        public virtual DbSet<Role> Roles { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<UserClaim> UserClaims { get; set; }
        public virtual DbSet<UserLogin> UserLogins { get; set; }
        public virtual DbSet<UserRole> UserRoles { get; set; }
        public virtual DbSet<ColumnHeader> ColumnHeaders { get; set; }
        public virtual DbSet<SchemaTag> SchemaTags { get; set; }
        public virtual DbSet<UserCountry> UserCountries { get; set; }
        public virtual DbSet<ValueTag> ValueTags { get; set; }
        public virtual DbSet<Setting> Settings { get; set; }

        #region Methods

        public virtual void DeleteCampaign (global::System.Guid? IMPORT_ID)
        {
            EntityConnection connection = ((IObjectContextAdapter)this).ObjectContext.Connection as EntityConnection;
            bool needClose = false;
            if (connection.State != ConnectionState.Open) {
              connection.Open();
              needClose = true;
            }

			try {
              using(EntityCommand command = new EntityCommand())
              {
                if (((IObjectContextAdapter)this).ObjectContext.CommandTimeout.HasValue)
                  command.CommandTimeout = ((IObjectContextAdapter)this).ObjectContext.CommandTimeout.Value;
                command.CommandType = System.Data.CommandType.StoredProcedure;
                command.CommandText = @"CmtEntities.DeleteCampaign";
                command.Connection = connection;
                EntityParameter IMPORT_IDParameter = new EntityParameter("IMPORT_ID", System.Data.DbType.Guid);
                IMPORT_IDParameter.Direction = ParameterDirection.Input;
                if (IMPORT_ID.HasValue)
                    IMPORT_IDParameter.Value = IMPORT_ID;
                command.Parameters.Add(IMPORT_IDParameter);
                command.ExecuteNonQuery();
              }
            }
            finally {
              if (needClose)
                connection.Close();
            }
        }

        public virtual void DeleteValueMapping (global::System.Guid? IMPORT_ID, global::System.Guid? SCHEMA_ELEMENT_ID, global::System.Guid? CAMPAIGN_ID, string VALUE_FROM_LOAD, string CREATE_USER)
        {
            EntityConnection connection = ((IObjectContextAdapter)this).ObjectContext.Connection as EntityConnection;
            bool needClose = false;
            if (connection.State != ConnectionState.Open) {
              connection.Open();
              needClose = true;
            }

			try {
              using(EntityCommand command = new EntityCommand())
              {
                if (((IObjectContextAdapter)this).ObjectContext.CommandTimeout.HasValue)
                  command.CommandTimeout = ((IObjectContextAdapter)this).ObjectContext.CommandTimeout.Value;
                command.CommandType = System.Data.CommandType.StoredProcedure;
                command.CommandText = @"CmtEntities.DeleteValueMapping";
                command.Connection = connection;
                EntityParameter IMPORT_IDParameter = new EntityParameter("IMPORT_ID", System.Data.DbType.Guid);
                IMPORT_IDParameter.Direction = ParameterDirection.Input;
                if (IMPORT_ID.HasValue)
                    IMPORT_IDParameter.Value = IMPORT_ID;
                command.Parameters.Add(IMPORT_IDParameter);
                EntityParameter SCHEMA_ELEMENT_IDParameter = new EntityParameter("SCHEMA_ELEMENT_ID", System.Data.DbType.Guid);
                SCHEMA_ELEMENT_IDParameter.Direction = ParameterDirection.Input;
                if (SCHEMA_ELEMENT_ID.HasValue)
                    SCHEMA_ELEMENT_IDParameter.Value = SCHEMA_ELEMENT_ID;
                command.Parameters.Add(SCHEMA_ELEMENT_IDParameter);
                EntityParameter CAMPAIGN_IDParameter = new EntityParameter("CAMPAIGN_ID", System.Data.DbType.Guid);
                CAMPAIGN_IDParameter.Direction = ParameterDirection.Input;
                if (CAMPAIGN_ID.HasValue)
                    CAMPAIGN_IDParameter.Value = CAMPAIGN_ID;
                command.Parameters.Add(CAMPAIGN_IDParameter);
                EntityParameter VALUE_FROM_LOADParameter = new EntityParameter("VALUE_FROM_LOAD", System.Data.DbType.String);
                VALUE_FROM_LOADParameter.Direction = ParameterDirection.Input;
                if (VALUE_FROM_LOAD != null)
                    VALUE_FROM_LOADParameter.Value = VALUE_FROM_LOAD;
                command.Parameters.Add(VALUE_FROM_LOADParameter);
                EntityParameter CREATE_USERParameter = new EntityParameter("CREATE_USER", System.Data.DbType.String);
                CREATE_USERParameter.Direction = ParameterDirection.Input;
                if (CREATE_USER != null)
                    CREATE_USERParameter.Value = CREATE_USER;
                command.Parameters.Add(CREATE_USERParameter);
                command.ExecuteNonQuery();
              }
            }
            finally {
              if (needClose)
                connection.Close();
            }
        }

        public virtual void CreateCampaignMapping (global::System.Guid? IMPORT_ID)
        {
            EntityConnection connection = ((IObjectContextAdapter)this).ObjectContext.Connection as EntityConnection;
            bool needClose = false;
            if (connection.State != ConnectionState.Open) {
              connection.Open();
              needClose = true;
            }

			try {
              using(EntityCommand command = new EntityCommand())
              {
                if (((IObjectContextAdapter)this).ObjectContext.CommandTimeout.HasValue)
                  command.CommandTimeout = ((IObjectContextAdapter)this).ObjectContext.CommandTimeout.Value;
                command.CommandType = System.Data.CommandType.StoredProcedure;
                command.CommandText = @"CmtEntities.CreateCampaignMapping";
                command.Connection = connection;
                EntityParameter IMPORT_IDParameter = new EntityParameter("IMPORT_ID", System.Data.DbType.Guid);
                IMPORT_IDParameter.Direction = ParameterDirection.Input;
                if (IMPORT_ID.HasValue)
                    IMPORT_IDParameter.Value = IMPORT_ID;
                command.Parameters.Add(IMPORT_IDParameter);
                command.ExecuteNonQuery();
              }
            }
            finally {
              if (needClose)
                connection.Close();
            }
        }

        public virtual void CreateRowValueImport (global::System.Guid? IMPORT_ID)
        {
            EntityConnection connection = ((IObjectContextAdapter)this).ObjectContext.Connection as EntityConnection;
            bool needClose = false;
            if (connection.State != ConnectionState.Open) {
              connection.Open();
              needClose = true;
            }

			try {
              using(EntityCommand command = new EntityCommand())
              {
                if (((IObjectContextAdapter)this).ObjectContext.CommandTimeout.HasValue)
                  command.CommandTimeout = ((IObjectContextAdapter)this).ObjectContext.CommandTimeout.Value;
                command.CommandType = System.Data.CommandType.StoredProcedure;
                command.CommandText = @"CmtEntities.CreateRowValueImport";
                command.Connection = connection;
                EntityParameter IMPORT_IDParameter = new EntityParameter("IMPORT_ID", System.Data.DbType.Guid);
                IMPORT_IDParameter.Direction = ParameterDirection.Input;
                if (IMPORT_ID.HasValue)
                    IMPORT_IDParameter.Value = IMPORT_ID;
                command.Parameters.Add(IMPORT_IDParameter);
                command.ExecuteNonQuery();
              }
            }
            finally {
              if (needClose)
                connection.Close();
            }
        }

        public virtual void AutomapColumn (global::System.Guid? IMPORT_ID, ref byte[] CAMPAIGN_COLUMN_NAME)
        {
            EntityConnection connection = ((IObjectContextAdapter)this).ObjectContext.Connection as EntityConnection;
            bool needClose = false;
            if (connection.State != ConnectionState.Open) {
              connection.Open();
              needClose = true;
            }

			try {
              using(EntityCommand command = new EntityCommand())
              {
                if (((IObjectContextAdapter)this).ObjectContext.CommandTimeout.HasValue)
                  command.CommandTimeout = ((IObjectContextAdapter)this).ObjectContext.CommandTimeout.Value;
                command.CommandType = System.Data.CommandType.StoredProcedure;
                command.CommandText = @"CmtEntities.AutomapColumn";
                command.Connection = connection;
                EntityParameter IMPORT_IDParameter = new EntityParameter("IMPORT_ID", System.Data.DbType.Guid);
                IMPORT_IDParameter.Direction = ParameterDirection.Input;
                if (IMPORT_ID.HasValue)
                    IMPORT_IDParameter.Value = IMPORT_ID;
                command.Parameters.Add(IMPORT_IDParameter);
                EntityParameter CAMPAIGN_COLUMN_NAMEParameter = new EntityParameter("CAMPAIGN_COLUMN_NAME", System.Data.DbType.Binary);
                CAMPAIGN_COLUMN_NAMEParameter.Direction = ParameterDirection.Output;
                if (CAMPAIGN_COLUMN_NAME != null)
                    CAMPAIGN_COLUMN_NAMEParameter.Value = CAMPAIGN_COLUMN_NAME;
                command.Parameters.Add(CAMPAIGN_COLUMN_NAMEParameter);
                command.ExecuteNonQuery();
                if (CAMPAIGN_COLUMN_NAMEParameter.Value != null && !(CAMPAIGN_COLUMN_NAMEParameter.Value is System.DBNull))
                  CAMPAIGN_COLUMN_NAME = (byte[])CAMPAIGN_COLUMN_NAMEParameter.Value;
                else
                  CAMPAIGN_COLUMN_NAME = default(byte[]);
              }
            }
            finally {
              if (needClose)
                connection.Close();
            }
        }

        public virtual void DeleteColumnMapping (global::System.Guid? IMPORT_ID, global::System.Guid? SCHEMA_ELEMENT_ID, string CREATE_USER)
        {
            EntityConnection connection = ((IObjectContextAdapter)this).ObjectContext.Connection as EntityConnection;
            bool needClose = false;
            if (connection.State != ConnectionState.Open) {
              connection.Open();
              needClose = true;
            }

			try {
              using(EntityCommand command = new EntityCommand())
              {
                if (((IObjectContextAdapter)this).ObjectContext.CommandTimeout.HasValue)
                  command.CommandTimeout = ((IObjectContextAdapter)this).ObjectContext.CommandTimeout.Value;
                command.CommandType = System.Data.CommandType.StoredProcedure;
                command.CommandText = @"CmtEntities.DeleteColumnMapping";
                command.Connection = connection;
                EntityParameter IMPORT_IDParameter = new EntityParameter("IMPORT_ID", System.Data.DbType.Guid);
                IMPORT_IDParameter.Direction = ParameterDirection.Input;
                if (IMPORT_ID.HasValue)
                    IMPORT_IDParameter.Value = IMPORT_ID;
                command.Parameters.Add(IMPORT_IDParameter);
                EntityParameter SCHEMA_ELEMENT_IDParameter = new EntityParameter("SCHEMA_ELEMENT_ID", System.Data.DbType.Guid);
                SCHEMA_ELEMENT_IDParameter.Direction = ParameterDirection.Input;
                if (SCHEMA_ELEMENT_ID.HasValue)
                    SCHEMA_ELEMENT_IDParameter.Value = SCHEMA_ELEMENT_ID;
                command.Parameters.Add(SCHEMA_ELEMENT_IDParameter);
                EntityParameter CREATE_USERParameter = new EntityParameter("CREATE_USER", System.Data.DbType.String);
                CREATE_USERParameter.Direction = ParameterDirection.Input;
                if (CREATE_USER != null)
                    CREATE_USERParameter.Value = CREATE_USER;
                command.Parameters.Add(CREATE_USERParameter);
                command.ExecuteNonQuery();
              }
            }
            finally {
              if (needClose)
                connection.Close();
            }
        }

        public virtual void DeleteFailedImportData (global::System.Guid? IMPORT_ID)
        {
            EntityConnection connection = ((IObjectContextAdapter)this).ObjectContext.Connection as EntityConnection;
            bool needClose = false;
            if (connection.State != ConnectionState.Open) {
              connection.Open();
              needClose = true;
            }

			try {
              using(EntityCommand command = new EntityCommand())
              {
                if (((IObjectContextAdapter)this).ObjectContext.CommandTimeout.HasValue)
                  command.CommandTimeout = ((IObjectContextAdapter)this).ObjectContext.CommandTimeout.Value;
                command.CommandType = System.Data.CommandType.StoredProcedure;
                command.CommandText = @"CmtEntities.DeleteFailedImportData";
                command.Connection = connection;
                EntityParameter IMPORT_IDParameter = new EntityParameter("IMPORT_ID", System.Data.DbType.Guid);
                IMPORT_IDParameter.Direction = ParameterDirection.Input;
                if (IMPORT_ID.HasValue)
                    IMPORT_IDParameter.Value = IMPORT_ID;
                command.Parameters.Add(IMPORT_IDParameter);
                command.ExecuteNonQuery();
              }
            }
            finally {
              if (needClose)
                connection.Close();
            }
        }

        public virtual ObjectResult<GetSchemaTreeResult> GetSchemaTree (string COUNTRY_CODE)
        {
            ObjectParameter COUNTRY_CODEParameter;
            if (COUNTRY_CODE != null)
            {
                COUNTRY_CODEParameter = new ObjectParameter("COUNTRY_CODE", COUNTRY_CODE);
            }
            else
            {
                COUNTRY_CODEParameter = new ObjectParameter("COUNTRY_CODE", typeof(string));
            }
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSchemaTreeResult>("CmtEntities.GetSchemaTree", COUNTRY_CODEParameter);
        }

        public virtual ObjectResult<GetElementsForCampaignAndImportResult> GetElementsForCampaignAndImport (global::System.Guid? CAMPAIGN_ID, global::System.Guid? IMPORT_ID, global::System.Guid? SCHEMA_ID, bool? SHOW_INDIRECT, int? START_INDEX, int? COUNT)
        {
            ObjectParameter CAMPAIGN_IDParameter;
            if (CAMPAIGN_ID.HasValue)
            {
                CAMPAIGN_IDParameter = new ObjectParameter("CAMPAIGN_ID", CAMPAIGN_ID);
            }
            else
            {
                CAMPAIGN_IDParameter = new ObjectParameter("CAMPAIGN_ID", typeof(global::System.Guid?));
            }
            ObjectParameter IMPORT_IDParameter;
            if (IMPORT_ID.HasValue)
            {
                IMPORT_IDParameter = new ObjectParameter("IMPORT_ID", IMPORT_ID);
            }
            else
            {
                IMPORT_IDParameter = new ObjectParameter("IMPORT_ID", typeof(global::System.Guid?));
            }
            ObjectParameter SCHEMA_IDParameter;
            if (SCHEMA_ID.HasValue)
            {
                SCHEMA_IDParameter = new ObjectParameter("SCHEMA_ID", SCHEMA_ID);
            }
            else
            {
                SCHEMA_IDParameter = new ObjectParameter("SCHEMA_ID", typeof(global::System.Guid?));
            }
            ObjectParameter SHOW_INDIRECTParameter;
            if (SHOW_INDIRECT.HasValue)
            {
                SHOW_INDIRECTParameter = new ObjectParameter("SHOW_INDIRECT", SHOW_INDIRECT);
            }
            else
            {
                SHOW_INDIRECTParameter = new ObjectParameter("SHOW_INDIRECT", typeof(bool?));
            }
            ObjectParameter START_INDEXParameter;
            if (START_INDEX.HasValue)
            {
                START_INDEXParameter = new ObjectParameter("START_INDEX", START_INDEX);
            }
            else
            {
                START_INDEXParameter = new ObjectParameter("START_INDEX", typeof(int?));
            }
            ObjectParameter COUNTParameter;
            if (COUNT.HasValue)
            {
                COUNTParameter = new ObjectParameter("COUNT", COUNT);
            }
            else
            {
                COUNTParameter = new ObjectParameter("COUNT", typeof(int?));
            }
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetElementsForCampaignAndImportResult>("CmtEntities.GetElementsForCampaignAndImport", CAMPAIGN_IDParameter, IMPORT_IDParameter, SCHEMA_IDParameter, SHOW_INDIRECTParameter, START_INDEXParameter, COUNTParameter);
        }

        public virtual ObjectResult<CloneSchemaResult> CloneSchema (global::System.Guid? SOURCE_SCHEMA_ID, string SCHEMA_NAME, global::System.Guid? CHANNEL_ID, string CREATE_USER)
        {
            ObjectParameter SOURCE_SCHEMA_IDParameter;
            if (SOURCE_SCHEMA_ID.HasValue)
            {
                SOURCE_SCHEMA_IDParameter = new ObjectParameter("SOURCE_SCHEMA_ID", SOURCE_SCHEMA_ID);
            }
            else
            {
                SOURCE_SCHEMA_IDParameter = new ObjectParameter("SOURCE_SCHEMA_ID", typeof(global::System.Guid?));
            }
            ObjectParameter SCHEMA_NAMEParameter;
            if (SCHEMA_NAME != null)
            {
                SCHEMA_NAMEParameter = new ObjectParameter("SCHEMA_NAME", SCHEMA_NAME);
            }
            else
            {
                SCHEMA_NAMEParameter = new ObjectParameter("SCHEMA_NAME", typeof(string));
            }
            ObjectParameter CHANNEL_IDParameter;
            if (CHANNEL_ID.HasValue)
            {
                CHANNEL_IDParameter = new ObjectParameter("CHANNEL_ID", CHANNEL_ID);
            }
            else
            {
                CHANNEL_IDParameter = new ObjectParameter("CHANNEL_ID", typeof(global::System.Guid?));
            }
            ObjectParameter CREATE_USERParameter;
            if (CREATE_USER != null)
            {
                CREATE_USERParameter = new ObjectParameter("CREATE_USER", CREATE_USER);
            }
            else
            {
                CREATE_USERParameter = new ObjectParameter("CREATE_USER", typeof(string));
            }
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CloneSchemaResult>("CmtEntities.CloneSchema", SOURCE_SCHEMA_IDParameter, SCHEMA_NAMEParameter, CHANNEL_IDParameter, CREATE_USERParameter);
        }

        public virtual void DeleteAugmentation (global::System.Guid? IMPORT_ID, global::System.Guid? SCHEMA_ELEMENT_ID)
        {
            EntityConnection connection = ((IObjectContextAdapter)this).ObjectContext.Connection as EntityConnection;
            bool needClose = false;
            if (connection.State != ConnectionState.Open) {
              connection.Open();
              needClose = true;
            }

			try {
              using(EntityCommand command = new EntityCommand())
              {
                if (((IObjectContextAdapter)this).ObjectContext.CommandTimeout.HasValue)
                  command.CommandTimeout = ((IObjectContextAdapter)this).ObjectContext.CommandTimeout.Value;
                command.CommandType = System.Data.CommandType.StoredProcedure;
                command.CommandText = @"CmtEntities.DeleteAugmentation";
                command.Connection = connection;
                EntityParameter IMPORT_IDParameter = new EntityParameter("IMPORT_ID", System.Data.DbType.Guid);
                IMPORT_IDParameter.Direction = ParameterDirection.Input;
                if (IMPORT_ID.HasValue)
                    IMPORT_IDParameter.Value = IMPORT_ID;
                command.Parameters.Add(IMPORT_IDParameter);
                EntityParameter SCHEMA_ELEMENT_IDParameter = new EntityParameter("SCHEMA_ELEMENT_ID", System.Data.DbType.Guid);
                SCHEMA_ELEMENT_IDParameter.Direction = ParameterDirection.Input;
                if (SCHEMA_ELEMENT_ID.HasValue)
                    SCHEMA_ELEMENT_IDParameter.Value = SCHEMA_ELEMENT_ID;
                command.Parameters.Add(SCHEMA_ELEMENT_IDParameter);
                command.ExecuteNonQuery();
              }
            }
            finally {
              if (needClose)
                connection.Close();
            }
        }

        public virtual ObjectResult<GetValuesAttributeResult> GetValuesAttribute ()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetValuesAttributeResult>("CmtEntities.GetValuesAttribute");
        }

        public virtual ObjectResult<GetSingleSchemaTreeResult> GetSingleSchemaTree (string COUNTRY_CODE, global::System.Guid? SCHEMA)
        {
            ObjectParameter COUNTRY_CODEParameter;
            if (COUNTRY_CODE != null)
            {
                COUNTRY_CODEParameter = new ObjectParameter("COUNTRY_CODE", COUNTRY_CODE);
            }
            else
            {
                COUNTRY_CODEParameter = new ObjectParameter("COUNTRY_CODE", typeof(string));
            }
            ObjectParameter SCHEMAParameter;
            if (SCHEMA.HasValue)
            {
                SCHEMAParameter = new ObjectParameter("SCHEMA", SCHEMA);
            }
            else
            {
                SCHEMAParameter = new ObjectParameter("SCHEMA", typeof(global::System.Guid?));
            }
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSingleSchemaTreeResult>("CmtEntities.GetSingleSchemaTree", COUNTRY_CODEParameter, SCHEMAParameter);
        }

        #endregion
    }

    #endregion
}

namespace CMT.DL
{
    public partial class Campaign
    {

        public Campaign()
        {
            this.ObjectId = new Guid();
            OnCreated();
        }

        #region Properties

        public virtual global::System.Guid ObjectId
        {
            get;
            set;
        }

        public virtual string Name
        {
            get;
            set;
        }

        public virtual global::System.Guid CountryId
        {
            get;
            set;
        }

        public virtual global::System.DateTime? StartDate
        {
            get;
            set;
        }

        public virtual global::System.DateTime? EndDate
        {
            get;
            set;
        }

        public virtual string CreateUser
        {
            get;
            set;
        }

        public virtual global::System.DateTime CreateDate
        {
            get;
            set;
        }

        public virtual string ChangeUser
        {
            get;
            set;
        }

        public virtual global::System.DateTime? ChangeDate
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
        public virtual Country Country
        {
            get;
            set;
        }
        public virtual ICollection<CampaignValue> CampaignValues
        {
            get;
            set;
        }
        public virtual ICollection<CampaignImport> CampaignImports
        {
            get;
            set;
        }
        public virtual ICollection<MetadataSchema> MetadataSchemas
        {
            get;
            set;
        }

        #endregion

        #region Extensibility Method Definitions
        partial void OnCreated();
        #endregion
    }
    public partial class CampaignValue
    {

        public CampaignValue()
        {
            this.ObjectId = new Guid();
            OnCreated();
        }

        #region Properties

        public virtual global::System.Guid ObjectId
        {
            get;
            set;
        }

        public virtual global::System.Guid CampaignId
        {
            get;
            set;
        }

        public virtual global::System.Guid SchemaElementId
        {
            get;
            set;
        }

        public virtual global::System.Guid? ValueId
        {
            get;
            set;
        }

        public virtual string Value
        {
            get;
            set;
        }

        public virtual string CreateUser
        {
            get;
            set;
        }

        public virtual global::System.DateTime CreateDate
        {
            get;
            set;
        }

        public virtual string ChangeUser
        {
            get;
            set;
        }

        public virtual global::System.DateTime? ChangeDate
        {
            get;
            set;
        }

        public virtual global::System.Guid ImportId
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
        public virtual Campaign Campaign
        {
            get;
            set;
        }
        public virtual MetadataSchemaElement MetadataSchemaElement
        {
            get;
            set;
        }
        public virtual Value ListValue
        {
            get;
            set;
        }
        public virtual ICollection<SourceValue> SourceValues
        {
            get;
            set;
        }
        public virtual Import Import
        {
            get;
            set;
        }

        #endregion

        #region Extensibility Method Definitions
        partial void OnCreated();
        #endregion
    }
    public partial class Country
    {

        public Country()
        {
            this.ObjectId = new Guid();
            OnCreated();
        }

        #region Properties

        public virtual global::System.Guid ObjectId
        {
            get;
            set;
        }

        public virtual string Name
        {
            get;
            set;
        }

        public virtual string Code
        {
            get;
            set;
        }

        public virtual string CreateUser
        {
            get;
            set;
        }

        public virtual global::System.DateTime CreateDate
        {
            get;
            set;
        }

        public virtual string ChangeUser
        {
            get;
            set;
        }

        public virtual global::System.DateTime? ChangeDate
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
        public virtual ICollection<Campaign> Campaigns
        {
            get;
            set;
        }
        public virtual ICollection<Import> Imports
        {
            get;
            set;
        }
        public virtual ICollection<MetadataElement> MetadataElements
        {
            get;
            set;
        }
        public virtual ICollection<ValueDetail> ValueDetails
        {
            get;
            set;
        }
        public virtual ICollection<MetadataSchema> MetadataSchemata1
        {
            get;
            set;
        }
        public virtual ICollection<Value> Values
        {
            get;
            set;
        }
        public virtual ICollection<UserCountry> UserCountries
        {
            get;
            set;
        }
        public virtual ICollection<ValueTag> ValueTags
        {
            get;
            set;
        }
        public virtual ICollection<Setting> Settings
        {
            get;
            set;
        }

        #endregion

        #region Extensibility Method Definitions
        partial void OnCreated();
        #endregion
    }
    public partial class DistinctRow
    {

        public DistinctRow()
        {
            this.ObjectId = new Guid();
            this.IsHeader = false;
            OnCreated();
        }

        #region Properties

        public virtual global::System.Guid ObjectId
        {
            get;
            set;
        }

        public virtual global::System.Guid ImportId
        {
            get;
            set;
        }

        public virtual bool IsHeader
        {
            get;
            set;
        }

        public virtual int LineNumber
        {
            get;
            set;
        }

        public virtual string ColumnName
        {
            get;
            set;
        }

        public virtual string Value
        {
            get;
            set;
        }

        public virtual string CreateUser
        {
            get;
            set;
        }

        public virtual global::System.DateTime CreateDate
        {
            get;
            set;
        }

        public virtual string ChangeUser
        {
            get;
            set;
        }

        public virtual global::System.DateTime? ChangeDate
        {
            get;
            set;
        }

        public virtual int ColumnIndex
        {
            get;
            set;
        }

        public virtual byte[] ValueHash
        {
            get;
            set;
        }

        public virtual byte[] ColumnNameHash
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
        public virtual Import Import
        {
            get;
            set;
        }
        public virtual ICollection<DistinctRowGrouping> DistinctRowGroupings_DistinctRowId
        {
            get;
            set;
        }
        public virtual ICollection<DistinctRowGrouping> DistinctRowGroupings_GroupingDistinctRowId
        {
            get;
            set;
        }

        #endregion

        #region Extensibility Method Definitions
        partial void OnCreated();
        #endregion
    }
    public partial class ElementType
    {

        public ElementType()
        {
            this.ObjectId = new Guid();
            OnCreated();
        }

        #region Properties

        public virtual global::System.Guid ObjectId
        {
            get;
            set;
        }

        public virtual string Name
        {
            get;
            set;
        }

        public virtual string CreateUser
        {
            get;
            set;
        }

        public virtual global::System.DateTime CreateDate
        {
            get;
            set;
        }

        public virtual string ChangeUser
        {
            get;
            set;
        }

        public virtual global::System.DateTime? ChangeDate
        {
            get;
            set;
        }

        public virtual CMT.BO.ElementTypeType Type
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
        public virtual ICollection<MetadataElement> MetadataElements
        {
            get;
            set;
        }

        #endregion

        #region Extensibility Method Definitions
        partial void OnCreated();
        #endregion
    }
    public partial class Import
    {

        public Import()
        {
            this.ObjectId = new Guid();
            this.Type = 0;
            OnCreated();
        }

        #region Properties

        public virtual global::System.Guid ObjectId
        {
            get;
            set;
        }

        public virtual global::System.Guid CountryId
        {
            get;
            set;
        }

        public virtual byte Status
        {
            get;
            set;
        }

        public virtual string FileName
        {
            get;
            set;
        }

        public virtual global::System.Guid? ChannelId
        {
            get;
            set;
        }

        public virtual global::System.Guid? SourceApplicationId
        {
            get;
            set;
        }

        public virtual global::System.Guid FileUniqueName
        {
            get;
            set;
        }

        public virtual string CreateUser
        {
            get;
            set;
        }

        public virtual global::System.DateTime CreateDate
        {
            get;
            set;
        }

        public virtual string ChangeUser
        {
            get;
            set;
        }

        public virtual global::System.DateTime? ChangeDate
        {
            get;
            set;
        }

        public virtual global::System.Guid SchemaId
        {
            get;
            set;
        }

        public virtual string Message
        {
            get;
            set;
        }

        public virtual byte Type
        {
            get;
            set;
        }

        public virtual global::System.Guid? SourceMappingImportId
        {
            get;
            set;
        }

        public virtual byte[] CampaignColumnNameHash
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
        public virtual ICollection<DistinctRow> DistinctRows
        {
            get;
            set;
        }
        public virtual Country Country
        {
            get;
            set;
        }
        public virtual ICollection<SourceTable> SourceTables
        {
            get;
            set;
        }
        public virtual ICollection<CampaignImport> CampaignImports
        {
            get;
            set;
        }
        public virtual Channel Channel
        {
            get;
            set;
        }
        public virtual Application Application
        {
            get;
            set;
        }
        public virtual ICollection<CampaignValue> CampaignValues
        {
            get;
            set;
        }
        public virtual MetadataSchema MetadataSchema
        {
            get;
            set;
        }
        public virtual ICollection<DistinctRowGrouping> DistinctRowGroupings
        {
            get;
            set;
        }
        public virtual ICollection<ColumnHeader> ColumnHeaders
        {
            get;
            set;
        }

        #endregion

        #region Extensibility Method Definitions
        partial void OnCreated();
        #endregion
    }
    public partial class MetadataElement
    {

        public MetadataElement()
        {
            this.ObjectId = new Guid();
            OnCreated();
        }

        #region Properties

        public virtual global::System.Guid ObjectId
        {
            get;
            set;
        }

        public virtual string Name
        {
            get;
            set;
        }

        public virtual global::System.Guid TypeId
        {
            get;
            set;
        }

        public virtual byte Status
        {
            get;
            set;
        }

        public virtual global::System.Guid? CountryId
        {
            get;
            set;
        }

        public virtual global::System.Guid? ValueListId
        {
            get;
            set;
        }

        public virtual string Description
        {
            get;
            set;
        }

        public virtual global::System.Guid? GroupId
        {
            get;
            set;
        }

        public virtual string CreateUser
        {
            get;
            set;
        }

        public virtual global::System.DateTime CreateDate
        {
            get;
            set;
        }

        public virtual string ChangeUser
        {
            get;
            set;
        }

        public virtual global::System.DateTime? ChangeDate
        {
            get;
            set;
        }

        public virtual bool Readonly
        {
            get;
            set;
        }

        public virtual int? Attributes
        {
            get;
            set;
        }

        public virtual string DefaultValue
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
        public virtual Country Country
        {
            get;
            set;
        }
        public virtual ElementType ElementType
        {
            get;
            set;
        }
        public virtual ValueList ValueList
        {
            get;
            set;
        }
        public virtual ICollection<MetadataSchemaElement> MetadataSchemaElements
        {
            get;
            set;
        }
        public virtual MetadataGroup MetadataGroup
        {
            get;
            set;
        }
        public virtual ICollection<ValueListLevel> ValueListLevels
        {
            get;
            set;
        }
        public virtual ICollection<DataRange> DataRanges
        {
            get;
            set;
        }
        public virtual ICollection<ColumnHeader> ColumnHeaders
        {
            get;
            set;
        }
        public virtual ICollection<ValueTag> ValueTags
        {
            get;
            set;
        }

        #endregion

        #region Extensibility Method Definitions
        partial void OnCreated();
        #endregion
    }
    public partial class MetadataSchema
    {

        public MetadataSchema()
        {
            this.ObjectId = new Guid();
            OnCreated();
        }

        #region Properties

        public virtual global::System.Guid ObjectId
        {
            get;
            set;
        }

        public virtual string Name
        {
            get;
            set;
        }

        public virtual bool IsActive
        {
            get;
            set;
        }

        public virtual global::System.Guid? ChannelId
        {
            get;
            set;
        }

        public virtual string CreateUser
        {
            get;
            set;
        }

        public virtual global::System.DateTime CreateDate
        {
            get;
            set;
        }

        public virtual string ChangeUser
        {
            get;
            set;
        }

        public virtual global::System.DateTime? ChangeDate
        {
            get;
            set;
        }

        public virtual string Description
        {
            get;
            set;
        }

        public virtual string ActivatedBy
        {
            get;
            set;
        }

        public virtual global::System.DateTime? ActivationDate
        {
            get;
            set;
        }

        public virtual string DefinedBy
        {
            get;
            set;
        }

        public virtual global::System.DateTime? DefinitionDate
        {
            get;
            set;
        }

        public virtual string DeactivatedBy
        {
            get;
            set;
        }

        public virtual global::System.DateTime? DeactivationDate
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
        public virtual ICollection<MetadataSchemaElement> MetadataSchemaElements
        {
            get;
            set;
        }
        public virtual Channel Channel
        {
            get;
            set;
        }
        public virtual ICollection<Country> Countries
        {
            get;
            set;
        }
        public virtual ICollection<Campaign> Campaigns
        {
            get;
            set;
        }
        public virtual ICollection<Import> Imports
        {
            get;
            set;
        }
        public virtual ICollection<DataRange> DataRanges
        {
            get;
            set;
        }
        public virtual ICollection<SchemaTag> SchemaTags
        {
            get;
            set;
        }

        #endregion

        #region Extensibility Method Definitions
        partial void OnCreated();
        #endregion
    }
    public partial class MetadataSchemaElement
    {

        public MetadataSchemaElement()
        {
            this.ObjectId = new Guid();
            OnCreated();
        }

        #region Properties

        public virtual global::System.Guid ObjectId
        {
            get;
            set;
        }

        public virtual global::System.Guid SchemaId
        {
            get;
            set;
        }

        public virtual global::System.Guid ElementId
        {
            get;
            set;
        }

        public virtual global::System.Guid? GroupId
        {
            get;
            set;
        }

        public virtual bool IsRequired
        {
            get;
            set;
        }

        public virtual string CreateUser
        {
            get;
            set;
        }

        public virtual global::System.DateTime CreateDate
        {
            get;
            set;
        }

        public virtual string ChangeUser
        {
            get;
            set;
        }

        public virtual global::System.DateTime? ChangeDate
        {
            get;
            set;
        }

        public virtual string DefaultValue
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
        public virtual ICollection<CampaignValue> CampaignValues
        {
            get;
            set;
        }
        public virtual MetadataSchema Schema
        {
            get;
            set;
        }
        public virtual MetadataElement MetadataElement
        {
            get;
            set;
        }
        public virtual MetadataGroup MetadataGroup
        {
            get;
            set;
        }
        public virtual ICollection<ColumnHeader> ColumnHeaders
        {
            get;
            set;
        }

        #endregion

        #region Extensibility Method Definitions
        partial void OnCreated();
        #endregion
    }
    public partial class MetadataGroup
    {

        public MetadataGroup()
        {
            this.ObjectId = new Guid();
            this.Type = 0;
            OnCreated();
        }

        #region Properties

        public virtual global::System.Guid ObjectId
        {
            get;
            set;
        }

        public virtual string Name
        {
            get;
            set;
        }

        public virtual byte Type
        {
            get;
            set;
        }

        public virtual string CreateUser
        {
            get;
            set;
        }

        public virtual global::System.DateTime CreateDate
        {
            get;
            set;
        }

        public virtual string ChangeUser
        {
            get;
            set;
        }

        public virtual global::System.DateTime? ChangeDate
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
        public virtual ICollection<MetadataElement> MetadataElements
        {
            get;
            set;
        }
        public virtual ICollection<MetadataSchemaElement> MetadataSchemaElements
        {
            get;
            set;
        }

        #endregion

        #region Extensibility Method Definitions
        partial void OnCreated();
        #endregion
    }
    public partial class SourceTable
    {

        public SourceTable()
        {
            this.ObjectId = new Guid();
            OnCreated();
        }

        #region Properties

        public virtual global::System.Guid ObjectId
        {
            get;
            set;
        }

        public virtual global::System.Guid ImportId
        {
            get;
            set;
        }

        public virtual int LineNumber
        {
            get;
            set;
        }

        public virtual string String01
        {
            get;
            set;
        }

        public virtual string String02
        {
            get;
            set;
        }

        public virtual string String03
        {
            get;
            set;
        }

        public virtual string String04
        {
            get;
            set;
        }

        public virtual string String05
        {
            get;
            set;
        }

        public virtual string String06
        {
            get;
            set;
        }

        public virtual string String07
        {
            get;
            set;
        }

        public virtual string String08
        {
            get;
            set;
        }

        public virtual string String09
        {
            get;
            set;
        }

        public virtual string String10
        {
            get;
            set;
        }

        public virtual string String11
        {
            get;
            set;
        }

        public virtual string String12
        {
            get;
            set;
        }

        public virtual string String13
        {
            get;
            set;
        }

        public virtual string String14
        {
            get;
            set;
        }

        public virtual string String15
        {
            get;
            set;
        }

        public virtual string String16
        {
            get;
            set;
        }

        public virtual string String17
        {
            get;
            set;
        }

        public virtual string String18
        {
            get;
            set;
        }

        public virtual string String19
        {
            get;
            set;
        }

        public virtual string String20
        {
            get;
            set;
        }

        public virtual string String21
        {
            get;
            set;
        }

        public virtual string String22
        {
            get;
            set;
        }

        public virtual string String23
        {
            get;
            set;
        }

        public virtual string String24
        {
            get;
            set;
        }

        public virtual string String25
        {
            get;
            set;
        }

        public virtual string String26
        {
            get;
            set;
        }

        public virtual string String27
        {
            get;
            set;
        }

        public virtual string String28
        {
            get;
            set;
        }

        public virtual string String29
        {
            get;
            set;
        }

        public virtual string String30
        {
            get;
            set;
        }

        public virtual string String31
        {
            get;
            set;
        }

        public virtual string String32
        {
            get;
            set;
        }

        public virtual string String33
        {
            get;
            set;
        }

        public virtual string String34
        {
            get;
            set;
        }

        public virtual string String35
        {
            get;
            set;
        }

        public virtual string String36
        {
            get;
            set;
        }

        public virtual string String37
        {
            get;
            set;
        }

        public virtual string String38
        {
            get;
            set;
        }

        public virtual string String39
        {
            get;
            set;
        }

        public virtual string String40
        {
            get;
            set;
        }

        public virtual string String41
        {
            get;
            set;
        }

        public virtual string String42
        {
            get;
            set;
        }

        public virtual string String43
        {
            get;
            set;
        }

        public virtual string String44
        {
            get;
            set;
        }

        public virtual string String45
        {
            get;
            set;
        }

        public virtual string String46
        {
            get;
            set;
        }

        public virtual string String47
        {
            get;
            set;
        }

        public virtual string String48
        {
            get;
            set;
        }

        public virtual string String49
        {
            get;
            set;
        }

        public virtual string String50
        {
            get;
            set;
        }

        public virtual string String51
        {
            get;
            set;
        }

        public virtual string String52
        {
            get;
            set;
        }

        public virtual string String53
        {
            get;
            set;
        }

        public virtual string String54
        {
            get;
            set;
        }

        public virtual string String55
        {
            get;
            set;
        }

        public virtual string String56
        {
            get;
            set;
        }

        public virtual string String57
        {
            get;
            set;
        }

        public virtual string String58
        {
            get;
            set;
        }

        public virtual string String59
        {
            get;
            set;
        }

        public virtual string String60
        {
            get;
            set;
        }

        public virtual string String61
        {
            get;
            set;
        }

        public virtual string String62
        {
            get;
            set;
        }

        public virtual string String63
        {
            get;
            set;
        }

        public virtual string String64
        {
            get;
            set;
        }

        public virtual string String65
        {
            get;
            set;
        }

        public virtual string String66
        {
            get;
            set;
        }

        public virtual string String67
        {
            get;
            set;
        }

        public virtual string String68
        {
            get;
            set;
        }

        public virtual string String69
        {
            get;
            set;
        }

        public virtual string String70
        {
            get;
            set;
        }

        public virtual string String71
        {
            get;
            set;
        }

        public virtual string String72
        {
            get;
            set;
        }

        public virtual string String73
        {
            get;
            set;
        }

        public virtual string String74
        {
            get;
            set;
        }

        public virtual string String75
        {
            get;
            set;
        }

        public virtual string CreateUser
        {
            get;
            set;
        }

        public virtual global::System.DateTime CreateDate
        {
            get;
            set;
        }

        public virtual string ChangeUser
        {
            get;
            set;
        }

        public virtual global::System.DateTime? ChangeDate
        {
            get;
            set;
        }

        public virtual string String76
        {
            get;
            set;
        }

        public virtual string String77
        {
            get;
            set;
        }

        public virtual string String78
        {
            get;
            set;
        }

        public virtual string String79
        {
            get;
            set;
        }

        public virtual string String80
        {
            get;
            set;
        }

        public virtual string String81
        {
            get;
            set;
        }

        public virtual string String82
        {
            get;
            set;
        }

        public virtual string String83
        {
            get;
            set;
        }

        public virtual string String84
        {
            get;
            set;
        }

        public virtual string String85
        {
            get;
            set;
        }

        public virtual string String86
        {
            get;
            set;
        }

        public virtual string String87
        {
            get;
            set;
        }

        public virtual string String88
        {
            get;
            set;
        }

        public virtual string String89
        {
            get;
            set;
        }

        public virtual string String90
        {
            get;
            set;
        }

        public virtual string String91
        {
            get;
            set;
        }

        public virtual string String92
        {
            get;
            set;
        }

        public virtual string String93
        {
            get;
            set;
        }

        public virtual string String94
        {
            get;
            set;
        }

        public virtual string String95
        {
            get;
            set;
        }

        public virtual string String96
        {
            get;
            set;
        }

        public virtual string String97
        {
            get;
            set;
        }

        public virtual string String98
        {
            get;
            set;
        }

        public virtual string String99
        {
            get;
            set;
        }

        public virtual string String100
        {
            get;
            set;
        }

        public virtual string String101
        {
            get;
            set;
        }

        public virtual string String102
        {
            get;
            set;
        }

        public virtual string String103
        {
            get;
            set;
        }

        public virtual string String104
        {
            get;
            set;
        }

        public virtual string String105
        {
            get;
            set;
        }

        public virtual string String106
        {
            get;
            set;
        }

        public virtual string String107
        {
            get;
            set;
        }

        public virtual string String108
        {
            get;
            set;
        }

        public virtual string String109
        {
            get;
            set;
        }

        public virtual string String110
        {
            get;
            set;
        }

        public virtual string String111
        {
            get;
            set;
        }

        public virtual string String112
        {
            get;
            set;
        }

        public virtual string String113
        {
            get;
            set;
        }

        public virtual string String114
        {
            get;
            set;
        }

        public virtual string String115
        {
            get;
            set;
        }

        public virtual string String116
        {
            get;
            set;
        }

        public virtual string String117
        {
            get;
            set;
        }

        public virtual string String118
        {
            get;
            set;
        }

        public virtual string String119
        {
            get;
            set;
        }

        public virtual string String120
        {
            get;
            set;
        }

        public virtual string String121
        {
            get;
            set;
        }

        public virtual string String122
        {
            get;
            set;
        }

        public virtual string String123
        {
            get;
            set;
        }

        public virtual string String124
        {
            get;
            set;
        }

        public virtual string String125
        {
            get;
            set;
        }

        public virtual string String126
        {
            get;
            set;
        }

        public virtual string String127
        {
            get;
            set;
        }

        public virtual string String128
        {
            get;
            set;
        }

        public virtual string String129
        {
            get;
            set;
        }

        public virtual string String130
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
        public virtual Import Import
        {
            get;
            set;
        }

        #endregion

        #region Extensibility Method Definitions
        partial void OnCreated();
        #endregion
    }
    public partial class SourceValue
    {

        public SourceValue()
        {
            this.ObjectId = new Guid();
            OnCreated();
        }

        #region Properties

        public virtual global::System.Guid ObjectId
        {
            get;
            set;
        }

        public virtual global::System.Guid CampaignValueId
        {
            get;
            set;
        }

        public virtual string ValueFromLoad
        {
            get;
            set;
        }

        public virtual string CreateUser
        {
            get;
            set;
        }

        public virtual global::System.DateTime CreateDate
        {
            get;
            set;
        }

        public virtual string ChangeUser
        {
            get;
            set;
        }

        public virtual global::System.DateTime? ChangeDate
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
        public virtual CampaignValue CampaignValue
        {
            get;
            set;
        }

        #endregion

        #region Extensibility Method Definitions
        partial void OnCreated();
        #endregion
    }
    public partial class Value
    {

        public Value()
        {
            this.ObjectId = new Guid();
            OnCreated();
        }

        #region Properties

        public virtual global::System.Guid ObjectId
        {
            get;
            set;
        }

        public virtual global::System.Guid? ValueListId
        {
            get;
            set;
        }

        public virtual global::System.Guid? ChildListId
        {
            get;
            set;
        }

        public virtual string TextValue
        {
            get;
            set;
        }

        public virtual byte Status
        {
            get;
            set;
        }

        public virtual string RequestedBy
        {
            get;
            set;
        }

        public virtual string ApprovedBy
        {
            get;
            set;
        }

        public virtual string RejectedBy
        {
            get;
            set;
        }

        public virtual string CreateUser
        {
            get;
            set;
        }

        public virtual global::System.DateTime CreateDate
        {
            get;
            set;
        }

        public virtual string ChangeUser
        {
            get;
            set;
        }

        public virtual global::System.DateTime? ChangeDate
        {
            get;
            set;
        }

        public virtual string ExternalId
        {
            get;
            set;
        }

        public virtual string GlobalCode
        {
            get;
            set;
        }

        public virtual global::System.Guid? ParentId
        {
            get;
            set;
        }

        public virtual global::System.Guid? CountryId
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
        public virtual ICollection<CampaignValue> CampaignValues
        {
            get;
            set;
        }
        public virtual ValueList ValueList
        {
            get;
            set;
        }
        public virtual ValueList ChildList
        {
            get;
            set;
        }
        public virtual ICollection<ValueDetail> ValueDetails
        {
            get;
            set;
        }
        public virtual Country Country
        {
            get;
            set;
        }
        public virtual ICollection<Value> ParentChildValues
        {
            get;
            set;
        }
        public virtual Value ParentValue
        {
            get;
            set;
        }
        public virtual ICollection<ValueTag> AssignedTags
        {
            get;
            set;
        }
        public virtual ICollection<ValueTag> UsedInTags
        {
            get;
            set;
        }

        #endregion

        #region Extensibility Method Definitions
        partial void OnCreated();
        #endregion
    }
    public partial class ValueDetail
    {

        public ValueDetail()
        {
            this.ObjectId = new Guid();
            this.Type = 0;
            OnCreated();
        }

        #region Properties

        public virtual global::System.Guid ObjectId
        {
            get;
            set;
        }

        public virtual string Value
        {
            get;
            set;
        }

        public virtual global::System.Guid? CountryId
        {
            get;
            set;
        }

        public virtual global::System.Guid ValueId
        {
            get;
            set;
        }

        public virtual byte Type
        {
            get;
            set;
        }

        public virtual string CreateUser
        {
            get;
            set;
        }

        public virtual global::System.DateTime CreateDate
        {
            get;
            set;
        }

        public virtual string ChangeUser
        {
            get;
            set;
        }

        public virtual global::System.DateTime? ChangeDate
        {
            get;
            set;
        }

        public virtual string ExternalId
        {
            get;
            set;
        }

        public virtual string LocalCode
        {
            get;
            set;
        }

        public virtual global::System.Guid? AttributeElementId
        {
            get;
            set;
        }

        public virtual global::System.Guid? AttributeValueId
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
        public virtual Country Country
        {
            get;
            set;
        }
        public virtual Value Value1
        {
            get;
            set;
        }

        #endregion

        #region Extensibility Method Definitions
        partial void OnCreated();
        #endregion
    }
    public partial class ValueList
    {

        public ValueList()
        {
            this.ObjectId = new Guid();
            OnCreated();
        }

        #region Properties

        public virtual global::System.Guid ObjectId
        {
            get;
            set;
        }

        public virtual string Name
        {
            get;
            set;
        }

        public virtual global::System.Guid? ParentId
        {
            get;
            set;
        }

        public virtual string CreateUser
        {
            get;
            set;
        }

        public virtual global::System.DateTime CreateDate
        {
            get;
            set;
        }

        public virtual string ChangeUser
        {
            get;
            set;
        }

        public virtual global::System.DateTime? ChangeDate
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
        public virtual ICollection<Value> Values
        {
            get;
            set;
        }
        public virtual ICollection<Value> Values_ChildListId
        {
            get;
            set;
        }
        public virtual ICollection<ValueList> ValueLists_ParentId
        {
            get;
            set;
        }
        public virtual ValueList ValueList_ParentId
        {
            get;
            set;
        }
        public virtual ICollection<MetadataElement> MetadataElements
        {
            get;
            set;
        }

        #endregion

        #region Extensibility Method Definitions
        partial void OnCreated();
        #endregion
    }
    public partial class CampaignImport
    {

        public CampaignImport()
        {
            this.ObjectId = new Guid();
            OnCreated();
        }

        #region Properties

        public virtual global::System.Guid ObjectId
        {
            get;
            set;
        }

        public virtual global::System.Guid CampaignId
        {
            get;
            set;
        }

        public virtual global::System.Guid ImportId
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
        public virtual Campaign Campaign
        {
            get;
            set;
        }
        public virtual Import Import
        {
            get;
            set;
        }

        #endregion

        #region Extensibility Method Definitions
        partial void OnCreated();
        #endregion
    }
    public partial class ViewElement
    {

        public ViewElement()
        {
            OnCreated();
        }

        #region Properties

        public virtual global::System.Guid ObjectId
        {
            get;
            set;
        }

        public virtual string Name
        {
            get;
            set;
        }

        public virtual string Type
        {
            get;
            set;
        }

        public virtual byte Status
        {
            get;
            set;
        }

        public virtual int? SchemasUsage
        {
            get;
            set;
        }

        public virtual string Localvalues
        {
            get;
            set;
        }

        public virtual global::System.Guid? CountryId
        {
            get;
            set;
        }

        #endregion

        #region Extensibility Method Definitions
        partial void OnCreated();
        #endregion
    }
    public partial class Channel
    {

        public Channel()
        {
            this.ObjectId = new Guid();
            OnCreated();
        }

        #region Properties

        public virtual global::System.Guid ObjectId
        {
            get;
            set;
        }

        public virtual string Name
        {
            get;
            set;
        }

        public virtual string CreateUser
        {
            get;
            set;
        }

        public virtual global::System.DateTime CreateDate
        {
            get;
            set;
        }

        public virtual string ChangeUser
        {
            get;
            set;
        }

        public virtual global::System.DateTime? ChangeDate
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
        public virtual ICollection<MetadataSchema> MetadataSchema
        {
            get;
            set;
        }
        public virtual ICollection<Import> Imports
        {
            get;
            set;
        }
        public virtual ICollection<Application> Applications
        {
            get;
            set;
        }

        #endregion

        #region Extensibility Method Definitions
        partial void OnCreated();
        #endregion
    }
    public partial class ViewCampaign
    {

        public ViewCampaign()
        {
            OnCreated();
        }

        #region Properties

        public virtual global::System.Guid ObjectId
        {
            get;
            set;
        }

        public virtual string Name
        {
            get;
            set;
        }

        public virtual global::System.DateTime? StartDate
        {
            get;
            set;
        }

        public virtual global::System.DateTime? EndDate
        {
            get;
            set;
        }

        public virtual string Date
        {
            get;
            set;
        }

        public virtual string Market
        {
            get;
            set;
        }

        public virtual string Product
        {
            get;
            set;
        }

        public virtual int? Channels
        {
            get;
            set;
        }

        public virtual global::System.DateTime CreateDate
        {
            get;
            set;
        }

        public virtual string CreateUser
        {
            get;
            set;
        }

        public virtual global::System.DateTime? ChangeDate
        {
            get;
            set;
        }

        public virtual string ChangeUser
        {
            get;
            set;
        }

        public virtual string MarketCode
        {
            get;
            set;
        }

        public virtual int Status
        {
            get;
            set;
        }

        #endregion

        #region Extensibility Method Definitions
        partial void OnCreated();
        #endregion
    }
    public partial class ViewMetadataElementTree
    {

        public ViewMetadataElementTree()
        {
            OnCreated();
        }

        #region Properties

        public virtual global::System.Guid ObjectId
        {
            get;
            set;
        }

        public virtual string Name
        {
            get;
            set;
        }

        public virtual int? AllValues
        {
            get;
            set;
        }

        public virtual int? LocalValues
        {
            get;
            set;
        }

        public virtual global::System.Guid? CountryId
        {
            get;
            set;
        }

        public virtual int Type
        {
            get;
            set;
        }

        public virtual global::System.Guid? ParentId
        {
            get;
            set;
        }

        public virtual bool? IsActive
        {
            get;
            set;
        }

        public virtual string LocalValue
        {
            get;
            set;
        }

        public virtual int? Level
        {
            get;
            set;
        }

        public virtual global::System.Guid? RootId
        {
            get;
            set;
        }

        public virtual bool? IsLov
        {
            get;
            set;
        }

        public virtual string LevelName
        {
            get;
            set;
        }

        public virtual string DataType
        {
            get;
            set;
        }

        public virtual bool? Readonly
        {
            get;
            set;
        }

        public virtual bool? HasTags
        {
            get;
            set;
        }

        public virtual string GlobalCode
        {
            get;
            set;
        }

        public virtual string LocalCode
        {
            get;
            set;
        }

        public virtual int? Attributes
        {
            get;
            set;
        }

        public virtual string DefaultValue
        {
            get;
            set;
        }

        public virtual string CountryCode
        {
            get;
            set;
        }

        public virtual global::System.Guid UniqueId
        {
            get;
            set;
        }

        public virtual string DefaultValueText
        {
            get;
            set;
        }

        public virtual global::System.Guid? ParentValueId
        {
            get;
            set;
        }

        #endregion

        #region Extensibility Method Definitions
        partial void OnCreated();
        #endregion
    }
    public partial class ValueListLevel
    {

        public ValueListLevel()
        {
            this.ObjectId = new Guid();
            OnCreated();
        }

        #region Properties

        public virtual global::System.Guid ObjectId
        {
            get;
            set;
        }

        public virtual string Name
        {
            get;
            set;
        }

        public virtual byte Level
        {
            get;
            set;
        }

        public virtual global::System.Guid ElementId
        {
            get;
            set;
        }

        public virtual string CreateUser
        {
            get;
            set;
        }

        public virtual global::System.DateTime CreateDate
        {
            get;
            set;
        }

        public virtual string ChangeUser
        {
            get;
            set;
        }

        public virtual global::System.DateTime? ChangeDate
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
        public virtual MetadataElement MetadataElement
        {
            get;
            set;
        }

        #endregion

        #region Extensibility Method Definitions
        partial void OnCreated();
        #endregion
    }
    public partial class Application
    {

        public Application()
        {
            this.ObjectId = new Guid();
            OnCreated();
        }

        #region Properties

        public virtual global::System.Guid ObjectId
        {
            get;
            set;
        }

        public virtual string Name
        {
            get;
            set;
        }

        public virtual string CreateUser
        {
            get;
            set;
        }

        public virtual global::System.DateTime CreateDate
        {
            get;
            set;
        }

        public virtual string ChangeUser
        {
            get;
            set;
        }

        public virtual global::System.DateTime? ChangeDate
        {
            get;
            set;
        }

        public virtual byte? Attributes
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
        public virtual ICollection<Import> Imports
        {
            get;
            set;
        }
        public virtual ICollection<DataRange> DataRanges
        {
            get;
            set;
        }
        public virtual ICollection<User> Users
        {
            get;
            set;
        }
        public virtual ICollection<Channel> Channels
        {
            get;
            set;
        }

        #endregion

        #region Extensibility Method Definitions
        partial void OnCreated();
        #endregion
    }
    public partial class DistinctRowGrouping
    {

        public DistinctRowGrouping()
        {
            this.ObjectId = new Guid();
            OnCreated();
        }

        #region Properties

        public virtual global::System.Guid ObjectId
        {
            get;
            set;
        }

        public virtual global::System.Guid DistinctRowId
        {
            get;
            set;
        }

        public virtual global::System.Guid GroupingDistinctRowId
        {
            get;
            set;
        }

        public virtual string CreateUser
        {
            get;
            set;
        }

        public virtual global::System.DateTime CreateDate
        {
            get;
            set;
        }

        public virtual string ChangeUser
        {
            get;
            set;
        }

        public virtual global::System.DateTime? ChangeDate
        {
            get;
            set;
        }

        public virtual global::System.Guid ImportId
        {
            get;
            set;
        }

        public virtual global::System.Guid? CampaignId
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
        public virtual DistinctRow DistinctRow_DistinctRowId
        {
            get;
            set;
        }
        public virtual DistinctRow DistinctRow_GroupingDistinctRowId
        {
            get;
            set;
        }
        public virtual Import Import
        {
            get;
            set;
        }

        #endregion

        #region Extensibility Method Definitions
        partial void OnCreated();
        #endregion
    }
    public partial class ViewValueTree
    {

        public ViewValueTree()
        {
            OnCreated();
        }

        #region Properties

        public virtual global::System.Guid ObjectId
        {
            get;
            set;
        }

        public virtual global::System.Guid? ValueId
        {
            get;
            set;
        }

        public virtual string TextValue
        {
            get;
            set;
        }

        public virtual string GlobalCode
        {
            get;
            set;
        }

        public virtual global::System.Guid? ParentValueId
        {
            get;
            set;
        }

        public virtual string ParentValue
        {
            get;
            set;
        }

        public virtual string ParentLocalValue
        {
            get;
            set;
        }

        public virtual global::System.Guid? ChildListId
        {
            get;
            set;
        }

        public virtual int IsLeaf
        {
            get;
            set;
        }

        public virtual int? Level
        {
            get;
            set;
        }

        public virtual global::System.Guid? ElementId
        {
            get;
            set;
        }

        public virtual global::System.Guid? SchemaId
        {
            get;
            set;
        }

        public virtual byte? Status
        {
            get;
            set;
        }

        public virtual string RequestedBy
        {
            get;
            set;
        }

        public virtual string ApprovedBy
        {
            get;
            set;
        }

        public virtual string RejectedBy
        {
            get;
            set;
        }

        public virtual global::System.DateTime CreateDate
        {
            get;
            set;
        }

        public virtual string CreateUser
        {
            get;
            set;
        }

        public virtual global::System.DateTime? ChangeDate
        {
            get;
            set;
        }

        public virtual string ChangeUser
        {
            get;
            set;
        }

        public virtual global::System.Guid? CountryId
        {
            get;
            set;
        }

        public virtual global::System.Guid? GlobalValueId
        {
            get;
            set;
        }

        #endregion

        #region Extensibility Method Definitions
        partial void OnCreated();
        #endregion
    }
    public partial class BrandImportHistory
    {

        public BrandImportHistory()
        {
            this.ObjectId = new Guid();
            OnCreated();
        }

        #region Properties

        public virtual global::System.Guid ObjectId
        {
            get;
            set;
        }

        public virtual string FileName
        {
            get;
            set;
        }

        public virtual global::System.DateTime Date
        {
            get;
            set;
        }

        #endregion

        #region Extensibility Method Definitions
        partial void OnCreated();
        #endregion
    }
    public partial class DataRange
    {

        public DataRange()
        {
            this.ObjectId = new Guid();
            OnCreated();
        }

        #region Properties

        public virtual global::System.Guid ObjectId
        {
            get;
            set;
        }

        public virtual global::System.Guid? SchemaId
        {
            get;
            set;
        }

        public virtual global::System.Guid? ElementId
        {
            get;
            set;
        }

        public virtual global::System.Guid ApplicationId
        {
            get;
            set;
        }

        public virtual string CreateUser
        {
            get;
            set;
        }

        public virtual global::System.DateTime CreateDate
        {
            get;
            set;
        }

        public virtual string ChangeUser
        {
            get;
            set;
        }

        public virtual global::System.DateTime? ChangeDate
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
        public virtual MetadataSchema MetadataSchema
        {
            get;
            set;
        }
        public virtual MetadataElement MetadataElement
        {
            get;
            set;
        }
        public virtual Application Application
        {
            get;
            set;
        }

        #endregion

        #region Extensibility Method Definitions
        partial void OnCreated();
        #endregion
    }
    public partial class Role
    {

        public Role()
        {
            this.ObjectId = new Guid();
            OnCreated();
        }

        #region Properties

        public virtual global::System.Guid ObjectId
        {
            get;
            set;
        }

        public virtual string Name
        {
            get;
            set;
        }

        public virtual string CreateUser
        {
            get;
            set;
        }

        public virtual global::System.DateTime CreateDate
        {
            get;
            set;
        }

        public virtual string ChangeUser
        {
            get;
            set;
        }

        public virtual global::System.DateTime? ChangeDate
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
        public virtual ICollection<UserRole> UserRoles
        {
            get;
            set;
        }

        #endregion

        #region Extensibility Method Definitions
        partial void OnCreated();
        #endregion
    }
    public partial class User
    {

        public User()
        {
            this.ObjectId = new Guid();
            OnCreated();
        }

        #region Properties

        public virtual global::System.Guid ObjectId
        {
            get;
            set;
        }

        public virtual string Email
        {
            get;
            set;
        }

        public virtual bool EmailConfirmed
        {
            get;
            set;
        }

        public virtual string PasswordHash
        {
            get;
            set;
        }

        public virtual string SecurityStamp
        {
            get;
            set;
        }

        public virtual string PhoneNumber
        {
            get;
            set;
        }

        public virtual bool PhoneNumberConfirmed
        {
            get;
            set;
        }

        public virtual bool TwoFactorEnabled
        {
            get;
            set;
        }

        public virtual global::System.DateTime? LockoutEndDateUtc
        {
            get;
            set;
        }

        public virtual bool LockoutEnabled
        {
            get;
            set;
        }

        public virtual int AccessFailedCount
        {
            get;
            set;
        }

        public virtual string UserName
        {
            get;
            set;
        }

        public virtual string SecurityQuestion
        {
            get;
            set;
        }

        public virtual string SecurityQuestionAnswer
        {
            get;
            set;
        }

        public virtual string CreateUser
        {
            get;
            set;
        }

        public virtual global::System.DateTime CreateDate
        {
            get;
            set;
        }

        public virtual string ChangeUser
        {
            get;
            set;
        }

        public virtual global::System.DateTime? ChangeDate
        {
            get;
            set;
        }

        public virtual global::System.Guid? ApplicationId
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
        public virtual Application Application
        {
            get;
            set;
        }
        public virtual ICollection<UserClaim> UserClaims
        {
            get;
            set;
        }
        public virtual ICollection<UserLogin> UserLogins
        {
            get;
            set;
        }
        public virtual ICollection<UserRole> UserRoles
        {
            get;
            set;
        }
        public virtual ICollection<UserCountry> UserCountries
        {
            get;
            set;
        }

        #endregion

        #region Extensibility Method Definitions
        partial void OnCreated();
        #endregion
    }
    public partial class UserClaim
    {

        public UserClaim()
        {
            this.ObjectId = new Guid();
            OnCreated();
        }

        #region Properties

        public virtual global::System.Guid ObjectId
        {
            get;
            set;
        }

        public virtual global::System.Guid UserId
        {
            get;
            set;
        }

        public virtual string ClaimType
        {
            get;
            set;
        }

        public virtual string ClaimValue
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
        public virtual User User
        {
            get;
            set;
        }

        #endregion

        #region Extensibility Method Definitions
        partial void OnCreated();
        #endregion
    }
    public partial class UserLogin
    {

        public UserLogin()
        {
            OnCreated();
        }

        #region Properties

        public virtual global::System.Guid ObjectId
        {
            get;
            set;
        }

        public virtual string LoginProvider
        {
            get;
            set;
        }

        public virtual string ProviderKey
        {
            get;
            set;
        }

        public virtual global::System.Guid UserId
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
        public virtual User User
        {
            get;
            set;
        }

        #endregion

        #region Extensibility Method Definitions
        partial void OnCreated();
        #endregion
    }
    public partial class UserRole
    {

        public UserRole()
        {
            this.ObjectId = new Guid();
            OnCreated();
        }

        #region Properties

        public virtual global::System.Guid ObjectId
        {
            get;
            set;
        }

        public virtual global::System.Guid UserId
        {
            get;
            set;
        }

        public virtual global::System.Guid RoleId
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
        public virtual Role Role
        {
            get;
            set;
        }
        public virtual User User
        {
            get;
            set;
        }

        #endregion

        #region Extensibility Method Definitions
        partial void OnCreated();
        #endregion
    }
    public partial class ColumnHeader
    {

        public ColumnHeader()
        {
            OnCreated();
        }

        #region Properties

        public virtual long ObjectId
        {
            get;
            set;
        }

        public virtual string ColumnName
        {
            get;
            set;
        }

        public virtual global::System.Guid ImportId
        {
            get;
            set;
        }

        public virtual global::System.Guid? SchemaElementId
        {
            get;
            set;
        }

        public virtual global::System.Guid? ElementId
        {
            get;
            set;
        }

        public virtual byte? Level
        {
            get;
            set;
        }

        public virtual byte[] ColumnNameHash
        {
            get;
            set;
        }

        public virtual string CreateUser
        {
            get;
            set;
        }

        public virtual global::System.DateTime CreateDate
        {
            get;
            set;
        }

        public virtual string ChangeUser
        {
            get;
            set;
        }

        public virtual global::System.DateTime? ChangeDate
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
        public virtual MetadataSchemaElement MetadataSchemaElement
        {
            get;
            set;
        }
        public virtual MetadataElement MetadataElement
        {
            get;
            set;
        }
        public virtual Import Import
        {
            get;
            set;
        }

        #endregion

        #region Extensibility Method Definitions
        partial void OnCreated();
        #endregion
    }
    public partial class SchemaTag
    {

        public SchemaTag()
        {
            this.ObjectId = new Guid();
            OnCreated();
        }

        #region Properties

        public virtual global::System.Guid ObjectId
        {
            get;
            set;
        }

        public virtual string Name
        {
            get;
            set;
        }

        public virtual global::System.Guid SchemaId
        {
            get;
            set;
        }

        public virtual string CreateUser
        {
            get;
            set;
        }

        public virtual global::System.DateTime CreateDate
        {
            get;
            set;
        }

        public virtual string ChangeUser
        {
            get;
            set;
        }

        public virtual global::System.DateTime? ChangeDate
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
        public virtual MetadataSchema MetadataSchema
        {
            get;
            set;
        }

        #endregion

        #region Extensibility Method Definitions
        partial void OnCreated();
        #endregion
    }
    public partial class UserCountry
    {

        public UserCountry()
        {
            OnCreated();
        }

        #region Properties

        public virtual global::System.Guid ObjectId
        {
            get;
            set;
        }

        public virtual global::System.Guid UserId
        {
            get;
            set;
        }

        public virtual global::System.Guid CountryId
        {
            get;
            set;
        }

        public virtual string CreateUser
        {
            get;
            set;
        }

        public virtual global::System.DateTime CreateDate
        {
            get;
            set;
        }

        public virtual string ChangeUser
        {
            get;
            set;
        }

        public virtual global::System.DateTime? ChangeDate
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
        public virtual User User
        {
            get;
            set;
        }
        public virtual Country Country
        {
            get;
            set;
        }

        #endregion

        #region Extensibility Method Definitions
        partial void OnCreated();
        #endregion
    }
    public partial class ValueTag
    {

        public ValueTag()
        {
            this.ObjectId = new Guid();
            this.Type = 0;
            this.CreateDate = DateTime.Now;
            OnCreated();
        }

        #region Properties

        public virtual global::System.Guid ObjectId
        {
            get;
            set;
        }

        public virtual global::System.Guid ValueId
        {
            get;
            set;
        }

        public virtual byte Type
        {
            get;
            set;
        }

        public virtual string SchemaTag
        {
            get;
            set;
        }

        public virtual global::System.Guid? TagElementId
        {
            get;
            set;
        }

        public virtual global::System.Guid? TagValueId
        {
            get;
            set;
        }

        public virtual string CreateUser
        {
            get;
            set;
        }

        public virtual global::System.DateTime CreateDate
        {
            get;
            set;
        }

        public virtual string ChangeUser
        {
            get;
            set;
        }

        public virtual global::System.DateTime? ChangeDate
        {
            get;
            set;
        }

        public virtual global::System.Guid? CountryId
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
        public virtual MetadataElement MetadataElement
        {
            get;
            set;
        }
        public virtual Value Value_ValueId
        {
            get;
            set;
        }
        public virtual Value Value_TagValueId
        {
            get;
            set;
        }
        public virtual Country Country
        {
            get;
            set;
        }

        #endregion

        #region Extensibility Method Definitions
        partial void OnCreated();
        #endregion
    }
    public partial class Setting
    {

        public Setting()
        {
            this.ObjectId = new Guid();
            this.CreateDate = DateTime.Now;
            OnCreated();
        }

        #region Properties

        public virtual global::System.Guid ObjectId
        {
            get;
            set;
        }

        public virtual string Name
        {
            get;
            set;
        }

        public virtual string Value
        {
            get;
            set;
        }

        public virtual global::System.Guid? CountryId
        {
            get;
            set;
        }

        public virtual string CreateUser
        {
            get;
            set;
        }

        public virtual global::System.DateTime CreateDate
        {
            get;
            set;
        }

        public virtual string ChangeUser
        {
            get;
            set;
        }

        public virtual global::System.DateTime? ChangeDate
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
        public virtual Country Country
        {
            get;
            set;
        }

        #endregion

        #region Extensibility Method Definitions
        partial void OnCreated();
        #endregion
    }

}

namespace CMT.DL
{
    public partial class GetElementsForCampaignAndImportResult
    {

        public GetElementsForCampaignAndImportResult()
        {
            OnCreated();
        }

        #region Properties

        public virtual string Name
        {
            get;
            set;
        }

        public virtual global::System.Guid ElementId
        {
            get;
            set;
        }

        public virtual int? AllRows
        {
            get;
            set;
        }

        public virtual int? IsFullyMapped
        {
            get;
            set;
        }

        public virtual int? IsPartiallyMapped
        {
            get;
            set;
        }

        public virtual int IsDirect
        {
            get;
            set;
        }

        #endregion

        #region Extensibility Method Definitions
        partial void OnCreated();
        #endregion
    }
    public partial class GetSchemaTreeResult
    {

        public GetSchemaTreeResult()
        {
            OnCreated();
        }

        #region Properties

        public virtual global::System.Guid? UniqueId
        {
            get;
            set;
        }

        public virtual global::System.Guid ObjectId
        {
            get;
            set;
        }

        public virtual string Name
        {
            get;
            set;
        }

        public virtual string GlobalCode
        {
            get;
            set;
        }

        public virtual int? AllValues
        {
            get;
            set;
        }

        public virtual int? LocalValues
        {
            get;
            set;
        }

        public virtual int Type
        {
            get;
            set;
        }

        public virtual global::System.Guid? ParentId
        {
            get;
            set;
        }

        public virtual string Channel
        {
            get;
            set;
        }

        public virtual bool? IsActive
        {
            get;
            set;
        }

        public virtual string LocalValue
        {
            get;
            set;
        }

        public virtual string LocalCode
        {
            get;
            set;
        }

        public virtual int? Level
        {
            get;
            set;
        }

        public virtual global::System.Guid? ElementId
        {
            get;
            set;
        }

        public virtual bool? IsLov
        {
            get;
            set;
        }

        public virtual string LevelName
        {
            get;
            set;
        }

        public virtual int? Readonly
        {
            get;
            set;
        }

        public virtual string Description
        {
            get;
            set;
        }

        public virtual string ActivatedBy
        {
            get;
            set;
        }

        public virtual global::System.DateTime? ActivationDate
        {
            get;
            set;
        }

        public virtual string DefinedBy
        {
            get;
            set;
        }

        public virtual global::System.DateTime? DefinitionDate
        {
            get;
            set;
        }

        public virtual string DeactivatedBy
        {
            get;
            set;
        }

        public virtual global::System.DateTime? DeactivationDate
        {
            get;
            set;
        }

        public virtual global::System.Guid? RootId
        {
            get;
            set;
        }

        public virtual string DataType
        {
            get;
            set;
        }

        public virtual int? Attributes
        {
            get;
            set;
        }

        public virtual string DefaultValue
        {
            get;
            set;
        }

        public virtual string DefaultValueText
        {
            get;
            set;
        }

        public virtual bool? HasTags
        {
            get;
            set;
        }

        #endregion

        #region Extensibility Method Definitions
        partial void OnCreated();
        #endregion
    }
    public partial class CloneSchemaResult
    {

        public CloneSchemaResult()
        {
            OnCreated();
        }

        #region Properties

        public virtual global::System.Guid? SchemaId
        {
            get;
            set;
        }

        #endregion

        #region Extensibility Method Definitions
        partial void OnCreated();
        #endregion
    }
    public partial class GetValuesAttributeResult
    {

        public GetValuesAttributeResult()
        {
            OnCreated();
        }

        #region Properties

        public virtual string TextValue
        {
            get;
            set;
        }

        public virtual string ExternalId
        {
            get;
            set;
        }

        public virtual global::System.Guid ValueId
        {
            get;
            set;
        }

        public virtual global::System.Guid? CountryId
        {
            get;
            set;
        }

        public virtual global::System.Guid? AttributeElementId
        {
            get;
            set;
        }

        public virtual global::System.Guid? AttributeValueId
        {
            get;
            set;
        }

        public virtual string ElementName
        {
            get;
            set;
        }

        public virtual string AttributeValue
        {
            get;
            set;
        }

        public virtual int? ElementType
        {
            get;
            set;
        }

        #endregion

        #region Extensibility Method Definitions
        partial void OnCreated();
        #endregion
    }
    public partial class GetSingleSchemaTreeResult
    {

        public GetSingleSchemaTreeResult()
        {
            OnCreated();
        }

        #region Properties

        public virtual int? UniqueId
        {
            get;
            set;
        }

        public virtual global::System.Guid ObjectId
        {
            get;
            set;
        }

        public virtual string Name
        {
            get;
            set;
        }

        public virtual string GlobalCode
        {
            get;
            set;
        }

        public virtual int? AllValues
        {
            get;
            set;
        }

        public virtual int? LocalValues
        {
            get;
            set;
        }

        public virtual int Type
        {
            get;
            set;
        }

        public virtual global::System.Guid? ParentId
        {
            get;
            set;
        }

        public virtual string Channel
        {
            get;
            set;
        }

        public virtual bool? IsActive
        {
            get;
            set;
        }

        public virtual string LocalValue
        {
            get;
            set;
        }

        public virtual string LocalCode
        {
            get;
            set;
        }

        public virtual int? Level
        {
            get;
            set;
        }

        public virtual global::System.Guid? ElementId
        {
            get;
            set;
        }

        public virtual bool? IsLov
        {
            get;
            set;
        }

        public virtual string LevelName
        {
            get;
            set;
        }

        public virtual int? Readonly
        {
            get;
            set;
        }

        public virtual string Description
        {
            get;
            set;
        }

        public virtual string ActivatedBy
        {
            get;
            set;
        }

        public virtual global::System.DateTime? ActivationDate
        {
            get;
            set;
        }

        public virtual string DefinedBy
        {
            get;
            set;
        }

        public virtual global::System.DateTime? DefinitionDate
        {
            get;
            set;
        }

        public virtual string DeactivatedBy
        {
            get;
            set;
        }

        public virtual global::System.DateTime? DeactivationDate
        {
            get;
            set;
        }

        public virtual global::System.Guid RootId
        {
            get;
            set;
        }

        public virtual string DataType
        {
            get;
            set;
        }

        public virtual int? Attributes
        {
            get;
            set;
        }

        public virtual string DefaultValue
        {
            get;
            set;
        }

        public virtual bool? IsRequired
        {
            get;
            set;
        }

        public virtual string DefaultValueText
        {
            get;
            set;
        }

        public virtual bool? HasTags
        {
            get;
            set;
        }

        public virtual global::System.Guid? ParentValueId
        {
            get;
            set;
        }

        #endregion

        #region Extensibility Method Definitions
        partial void OnCreated();
        #endregion
    }

}
