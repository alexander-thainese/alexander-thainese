files:
  "C:\\Program Files\\Amazon\\ElasticBeanstalk\\hooks\\appdeploy\\pre\\35_EnsureLogonPermission.ps1":
    content: |
           [string] $username = ("{0}" -f "CMT_USER")  
           Invoke-Command  -Script {  
             $tempPath = [System.IO.Path]::GetTempPath()  
             $import = Join-Path -Path $tempPath -ChildPath "import.inf"  
             if(Test-Path $import) { Remove-Item -Path $import -Force }  
             $export = Join-Path -Path $tempPath -ChildPath "export.inf"  
             if(Test-Path $export) { Remove-Item -Path $export -Force }  
             $secedt = Join-Path -Path $tempPath -ChildPath "secedt.sdb"  
             if(Test-Path $secedt) { Remove-Item -Path $secedt -Force }  
             try { 
              Write-Host ("Granting SeServiceLogonRight to user account.")  
               $sid = ((New-Object System.Security.Principal.NTAccount($username)).Translate([System.Security.Principal.SecurityIdentifier])).Value  
               secedit /export /cfg $export  
               $sids = (Select-String $export -Pattern "SeServiceLogonRight").Line  
               foreach ($line in @("[Unicode]", "Unicode=yes", "[System Access]", "[Event Audit]", "[Registry Values]", "[Version]", "signature=`"`$CHICAGO$`"", "Revision=1", "[Profile Description]", "Description=GrantLogOnAsAService security template", "[Privilege Rights]", "SeServiceLogonRight = *$sids,*$sid")){  
                 Add-Content $import $line  
               }  
               secedit /import /db $secedt /cfg $import  
               secedit /configure /db $secedt  
               gpupdate /force  
               Remove-Item -Path $import -Force  
               Remove-Item -Path $export -Force  
               Remove-Item -Path $secedt -Force  
             } catch {  
               Write-Host ("Failed to grant SeServiceLogonRight to user account.")  
               $error[0]  
             }  
           } 
